/**
 * osgGIS - GIS Library for OpenSceneGraph
 * Copyright 2007 Glenn Waldron and Pelican Ventures, Inc.
 * http://osggis.org
 *
 * osgGIS is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef _OSGGIS_SCRIPT_H_
#define _OSGGIS_SCRIPT_H_

#include <osgGIS/Common>
#include <osgGIS/Property>
#include <map>
#include <list>

namespace osgGIS
{
    class OSGGIS_EXPORT Script : public osg::Referenced
    {
    public:
        /**
         * Constructs a new, empty script.
         */
        Script();

        /**
         * Constructs a new script with code in the default language.
         */
        Script( const std::string& code );

        /**
         * Constructs a new script with code in the specified language.
         */
        Script( const std::string& name, const std::string& language, const std::string& code );
        
        /**
         * Sets the name of this script.
         */
        void setName( const std::string& name );

        /**
         * Gets the name of this script.
         */
        const std::string& getName() const;

        /** 
         * Sets the scripting language used by the code in this script.
         */
        void setLanguage( const std::string& language );

        /**
         * Gets the scripting language used by this script.
         */
        const std::string& getLanguage() const;

        /**
         * Sets the script code to execute.
         */
        void setCode( const std::string& code );
        
        /**
         * Gets the source code to execute.
         */
        const std::string& getCode() const;

    private:
        std::string name;
        std::string language;
        std::string code;
    };

    typedef std::list< osg::ref_ptr<Script> > ScriptList;
    typedef std::map<std::string, osg::ref_ptr<Script> > ScriptsByName;


    class OSGGIS_EXPORT ScriptResult
    {
    public:
        static ScriptResult Error( const std::string& msg );

        ScriptResult();
        ScriptResult( const std::string& val );
        ScriptResult( float val );
        ScriptResult( double val );
        ScriptResult( int val );
        ScriptResult( bool val );

        bool isValid();

        std::string asString() const;
        float       asFloat( float def ) const;
        double      asDouble( double def ) const;
        int         asInt( int def ) const;
        bool        asBool( bool def) const;
        osg::Vec3   asVec3() const;
        osg::Vec4   asVec4() const;

    private:
        ScriptResult( bool, const std::string& );
        bool valid;
        Property prop;
    };
}

#endif // _OSGGIS_SCRIPT_H_
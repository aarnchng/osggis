/** -*-c++-*-
 * osgGIS - GIS Library for OpenSceneGraph
 * Copyright 2007-2008 Glenn Waldron and Pelican Ventures, Inc.
 * http://osggis.org
 *
 * osgGIS is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef _OSGGIS_FEATURE_CURSOR_H_
#define _OSGGIS_FEATURE_CURSOR_H_

#include <osgGIS/Feature>

namespace osgGIS
{
    class FeatureStore;

    /**
     * Simple feature cursor implementation that uses a list of OIDs
     * to iterate over a feature store.
     */
    class OSGGIS_EXPORT FeatureCursor
    {
    public:
        /**
         * Constructs a feature cursor that will iterator over a set of features.
         */
        FeatureCursor( 
            const FeatureOIDList& oids,
            FeatureStore*         store,
            const GeoExtent&      search_extent,
            bool                  match_exactly );

        /**
         * Constructs a feature cursor that will return no elements.
         */
        FeatureCursor();

        FeatureCursor( const FeatureCursor& rhs );

        virtual ~FeatureCursor();

        void setPrefetchSize( int size );

    public:

        void reset();
        
        bool hasNext() const;

        Feature* next();


    private:
        bool                       at_bof;
        FeatureOIDList             oids;
        unsigned int               iter;
        osg::ref_ptr<FeatureStore> store;
        osg::ref_ptr<Feature>      last_result;
        GeoExtent                  search_extent;
        bool                       match_exactly;
        FeatureQueue               prefetched_results;

    private:
        void prefetch();
        int prefetch_size;
    };
}

#endif // _OSGGIS_FEATURE_CURSOR_H_

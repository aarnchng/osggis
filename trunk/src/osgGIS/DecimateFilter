/* -*-c++-*- */
/* osgGIS - GIS Library for OpenSceneGraph
 * Copyright 2007-2008 Glenn Waldron and Pelican Ventures, Inc.
 * http://osggis.org
 *
 * osgGIS is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef _OSGGIS_DECIMATE_FILTER_H_
#define _OSGGIS_DECIMATE_FILTER_H_ 1

#include <osgGIS/Common>
#include <osgGIS/FeatureFilter>

namespace osgGIS
{
    /**
     * Fitler that simplifies feature geometry by removing points.
     *
     * This simple decimation filter removes points from a feature based on a distance threshold;
     * i.e. if a point is less than a given distance from the previous point in a shape, it will
     * be removed.
     */
    class OSGGIS_EXPORT DecimateFilter : public FeatureFilter
    {
        OSGGIS_META_FILTER( DecimateFilter );  

    public:
        /**
         * Constructs an empty decimation filter.
         */
        DecimateFilter();

        /**
         * Copy constructor
         */
        DecimateFilter( const DecimateFilter& rhs );

        /**
         * Constructs a new decmination filter.
         *
         * @param distance_threshold
         *      Minimum allowable distance between points
         */
        DecimateFilter( double distance_threshold );

        ~DecimateFilter();

    public: // properties

        /**
         * Sets the minimum allowable distance between points in a feature shape.
         *
         * @param value
         *      Distance threshold, in feature units.
         */
        void setDistanceThreshold( double value );

        /**
         * Gets the minimum allowable distance between points in a feature shape.
         *
         * @return
         *      Distance threshold, in feature units.
         */
        double getDistanceThreshold() const;

    public: // FeatureFilter overrides
        FeatureList process( Feature* input, FilterEnv* env );

    public: // Filter overrides
        virtual void setProperty( const Property& p );
        virtual Properties getProperties() const;

    protected:
        double distance_threshold;
    };
}

#endif // _OSGGIS_DECIMATE_FILTER_H_

/**
 * osgGIS - GIS Library for OpenSceneGraph
 * Copyright 2007 Glenn Waldron and Pelican Ventures, Inc.
 * http://osggis.org
 *
 * osgGIS is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef _OSGGIS_SPATIAL_REFERENCE_FACTORY_H_
#define _OSGGIS_SPATIAL_REFERENCE_FACTORY_H_

#include <osgGIS/Common>
#include <osgGIS/SpatialReference>
#include <osg/Referenced>
#include <osg/Matrixd>
#include <osg/CoordinateSystemNode>
#include <string>

namespace osgGIS
{
    class OSGGIS_EXPORT SpatialReferenceFactory : public osg::Referenced
    {
    public:
        virtual SpatialReference* createWGS84() =0;

        virtual SpatialReference* createSRSfromWKT( 
            const std::string& wkt ) =0;

        virtual SpatialReference* createSRSfromWKT(
            const std::string&  wkt,
            const osg::Matrixd& reference_frame ) =0;
        
        virtual SpatialReference* createSRSfromESRI( 
            const std::string& wkt ) =0;

        virtual SpatialReference* createSRSfromESRI(
            const std::string&  wkt,
            const osg::Matrixd& reference_frame ) =0;

        virtual SpatialReference* createSRSfromWKTfile(
            const std::string& abs_path ) =0;

        virtual SpatialReference* createSRSfromTerrain(
            osg::Node* node ) =0;

        virtual SpatialReference* createGeocentricSRS() =0;

        virtual SpatialReference* createGeocentricSRS( 
            const SpatialReference* basis ) =0;

        virtual SpatialReference* createGeocentricSRS(
            const SpatialReference* basis,
            const osg::Matrixd&     reference_frame ) =0;

        virtual SpatialReference* createGeocentricSRS(
            const osg::CoordinateSystemNode* cs_node ) =0;

        virtual SpatialReference* validateSRS(
            SpatialReference* srs_to_validate ) =0;
    };
}

#endif // _OSGGIS_SPATIAL_REFERENCE_FACTORY_H_


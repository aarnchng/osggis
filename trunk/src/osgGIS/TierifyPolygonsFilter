/**
 * osgGIS - GIS Library for OpenSceneGraph
 * Copyright 2007 Glenn Waldron and Pelican Ventures, Inc.
 * http://osggis.org
 *
 * osgGIS is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef _OSGGIS_TIERIFY_POLYGONS_FILTER_H_
#define _OSGGIS_TIERIFY_POLYGONS_FILTER_H_ 1

#include <osgGIS/Common>
#include <osgGIS/FeatureFilter>
#include <osgGIS/Script>

namespace osgGIS
{
    /**
     * Tierifies polygon features to optimize extrusion.
     *
     * This filter optimizes groups of polygon features such that when they
     * are extruded (by the ExtrudeGeomFilter) the existence of internal
     * faces will be minimized.
     *
     * Without tierification, each polygon in an extruded set will extrude from
     * the base Z coordinate (e.g. the ground) all the way to the "height". Tierification
     * analyzes groups of polygons to see whether, for example, polygon A only needs to
     * extrude down from "height" to the top of polygon B (since going down further would
     * make no visual difference but would increase fill rate.
     */
    class OSGGIS_EXPORT TierifyPolygonsFilter : public FeatureFilter
    {
        OSGGIS_META_FILTER( TierifyPolygonsFilter ); 

    public:
        TierifyPolygonsFilter();
        virtual ~TierifyPolygonsFilter();
        
        void setHeightScript( Script* value );
        Script* getHeightScript() const;
        
        void setOutputHeightAttribute( const std::string& value );
        const std::string& getOutputHeightAttribute() const;
        
    public:
        FeatureList process( FeatureList& input, FilterEnv* env );
        
    protected:
        virtual void setProperty( const Property& p );
        virtual Properties getProperties() const;
        
    private:
        osg::ref_ptr<Script> height_script;
        std::string output_height_attr;
    };
}

#endif // _OSGGIS_TIERIFY_POLYGONS_FILTER_H_
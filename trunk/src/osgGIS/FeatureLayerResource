/* -*-c++-*- */
/* osgGIS - GIS Library for OpenSceneGraph
 * Copyright 2007-2008 Glenn Waldron and Pelican Ventures, Inc.
 * http://osggis.org
 *
 * osgGIS is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef _OSGGIS_FEATURE_LAYER_RESOURCE_H_
#define _OSGGIS_FEATURE_LAYER_RESOURCE_H_ 1

#include <osgGIS/Common>
#include <osgGIS/Resource>
#include <osgGIS/FeatureLayer>
namespace osgGIS
{
    /**
     * A feature layer wrapped as a Resource that filters can access
     * during filter-graph compilation.
     */
    class OSGGIS_EXPORT FeatureLayerResource : public Resource
    {
        OSGGIS_META_RESOURCE(FeatureLayerResource);

    public:
        /**
         * Construct a new empty feature layer resource.
         */
        FeatureLayerResource();

        /**
         * Constructs a new feature layer resource that wraps a named feature layer.
         *
         * @param name
         *      Name of feature layer to wrap
         */
        FeatureLayerResource( const std::string& name );

    public:
        /**
         * Gets the feature layer associated with this resource.
         *
         * @return The feature layer, or NULL if a connection cannot be made
         */
        FeatureLayer* getFeatureLayer();

    public: 
        virtual void setProperty( const Property& prop );
        virtual Properties getProperties() const;

    protected:
        virtual ~FeatureLayerResource();

    private:
        void init();
        osg::ref_ptr<FeatureLayer> feature_layer;
    };
    
    typedef std::vector< osg::ref_ptr<FeatureLayerResource> > FeatureLayerResourceVec;
}

#endif // _OSGGIS_RASTER_RESOURCE_H_

/**
 * osgGIS - GIS Library for OpenSceneGraph
 * Copyright 2007 Glenn Waldron and Pelican Ventures, Inc.
 * http://osggis.org
 *
 * osgGIS is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
 
#ifndef _OSGGIS_PROPERTY_H_
#define _OSGGIS_PROPERTY_H_ 1

#include <osgGIS/Common>
#include <osg/Vec2>
#include <osg/Vec3>
#include <osg/Vec4>
#include <osg/Matrix>
#include <vector>

namespace osgGIS
{
    class OSGGIS_EXPORT Property
    {
    public:
        Property();
        Property( const std::string& name, const std::string& value );
        Property( const std::string& name, int value );
        Property( const std::string& name, float value );
        Property( const std::string& name, double value );
        Property( const std::string& name, bool value );
        Property( const std::string& name, const osg::Vec2f& value );
        Property( const std::string& name, const osg::Vec3f& value );
        Property( const std::string& name, const osg::Vec4f& value );
        Property( const std::string& name, const osg::Matrix& value );

        const std::string& getName() const;
        const std::string& getValue() const;
        int getIntValue( int def ) const;
        float getFloatValue( float def ) const;
        double getDoubleValue( double def ) const;
        bool getBoolValue( bool def ) const;
        osg::Vec2f getVec2fValue() const;
        osg::Vec3f getVec3fValue() const;
        osg::Vec4f getVec4fValue() const;
        osg::Matrix getMatrixValue() const;

    private:
        std::string name;
        std::string value;
    };

    
    class OSGGIS_EXPORT Properties : public std::vector<Property>
    {
    public:
        int getIntValue( const std::string& name, int def );
        float getFloatValue( const std::string& name, float def );
        double getDoubleValue( const std::string& name, double def );
        bool getBoolValue( const std::string& name, bool def );
        std::string getValue( const std::string& name, std::string def );
    };
    
    
    class /*interface*/ OSGGIS_EXPORT ObjectWithProperties
    {
    public:
        virtual void setProperty( const Property& prop ) =0;
        
        virtual Properties getProperties() const =0;
    };
}

#endif //_OSGGIS_PROPERTY_H_
/**
 * osgGIS - GIS Library for OpenSceneGraph
 * Copyright 2007 Glenn Waldron and Pelican Ventures, Inc.
 * http://osggis.org
 *
 * osgGIS is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef _OSGGIS_EXTRUDE_GEOM_FILTER_H_
#define _OSGGIS_EXTRUDE_GEOM_FILTER_H_ 1

#include <osgGIS/Common>
#include <osgGIS/BuildGeomFilter>
#include <osgGIS/SkinResource>
#include <osgGIS/Script>
#include <osg/Texture>
#include <osg/TexEnv>

namespace osgGIS
{
    /**
     * Extrudes vector footprints into 3D geometries.
     */
    class OSGGIS_EXPORT ExtrudeGeomFilter : public BuildGeomFilter
    {
        OSGGIS_META_FILTER( ExtrudeGeomFilter );  


    public:
        ExtrudeGeomFilter();

        ExtrudeGeomFilter( const ExtrudeGeomFilter& rhs );

        ExtrudeGeomFilter( const osg::Vec4f& color, double height );

        ExtrudeGeomFilter( const int& options );

        virtual ~ExtrudeGeomFilter();
        
    public: //properties

        void setHeightScript( Script* script );

        Script* getHeightScript() const;
        
        void setWallSkinScript( Script* script );
        
        Script* getWallSkinScript() const;
        

    protected:
        virtual FragmentList process( FeatureList& input, FilterEnv* env );
        virtual FragmentList process( Feature* input, FilterEnv* env );
        
        virtual void setProperty( const Property& p );
        virtual Properties getProperties() const;
        
    private:
        osg::ref_ptr<Script> height_script;
        osg::ref_ptr<Script> wall_skin_script;
        
        SkinResource* getWallSkinForFeature( Feature* f, FilterEnv* env );

    private: // transients
        //bool has_batch_wall_skin;
        osg::ref_ptr<SkinResource> batch_wall_skin;
    };
}


#endif // _OSGGIS_EXTRUDE_GEOM_FILTER_H_
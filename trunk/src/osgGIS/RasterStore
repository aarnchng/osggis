/**
 * osgGIS - GIS Library for OpenSceneGraph
 * Copyright 2007 Glenn Waldron and Pelican Ventures, Inc.
 * http://osggis.org
 *
 * osgGIS is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef _OSGGIS_RASTER_STORE_H_
#define _OSGGIS_RASTER_STORE_H_ 1

#include <osgGIS/Common>
#include <osgGIS/SpatialReference>
#include <osgGIS/GeoExtent>

namespace osgGIS
{
    /**
     * Interface to a raster data backing store.
     *
     * A RasterStore holds an arbitrarily large georeferenced image.
     */
	class OSGGIS_EXPORT RasterStore : public osg::Referenced
	{
	public:
        /**
         * Gets whether a connection to the store was successfully established.
         */
		virtual bool isReady() const =0;

        /**
         * Gets the name of the store.
         */
        virtual const std::string& getName() const =0;
		
        /**
         * Gets the spatial reference system (SRS) of the geodata in the
         * store. This may be NULL is no SRS is specified.
         */
		virtual SpatialReference* getSRS() const =0;
		
        /**
         * Gets the minimum bounding rectangle containing the entire raster.
         */
		virtual const GeoExtent& getExtent() const =0;		

        /**
         * Extracts and returns a raster image from the store. This method
         * will automatically clip, up/downsample, and convert formats as needed.
         */
        virtual osg::Image* getImage( 
            const GeoExtent& extent,
            int max_span_pixels,
            bool force_power_of_2_dimensions ) const =0;
	};
}


#endif // _OSGGIS_RASTER_STORE_H_
